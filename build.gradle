group 'com.arrowhead.app'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.3.0.M5'
        lombokVersion = '1.14.8'
        querydslVersion = '3.6.0'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'


jar {
    baseName = 'pms'
    version = '0.0.1'

    exclude 'config/application.yml'
}

configurations {
    querydslapt
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    querydslapt "com.mysema.querydsl:querydsl-apt:$querydslVersion"

    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("com.mysema.querydsl:querydsl-jpa:$querydslVersion")
    compile("org.projectlombok:lombok:$lombokVersion")
    compile("org.apache.poi:poi:3.9")
    compile("com.itextpdf:itextpdf:5.0.6")
    runtime("mysql:mysql-connector-java")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
        sourceDirs += file('src/main/generated')
    }
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}


task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}